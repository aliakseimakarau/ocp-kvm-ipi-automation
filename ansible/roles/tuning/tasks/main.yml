---

- name: determine name of existing cluster from installation log
  ansible.builtin.include_tasks: '{{ inventory_dir }}/tasks/get_cluster_name.yml'
  tags:
    - always

- name: list all existing libvirt domains
  community.libvirt.virt:
    command: list_vms
  register: all_libvirt_domains
  tags:
    - libvirt

- name: determine list of libvirt domains belonging to current OpenShift cluster instance
  ansible.builtin.set_fact:
    all_libvirt_domains_for_cluster: '{{ all_libvirt_domains.list_vms | select("contains", cluster_id) | list }}'
  tags:
    - libvirt

- name: determine list of cluster nodes
  ansible.builtin.set_fact:
    master_domains: '{{ all_libvirt_domains_for_cluster | select("contains", "master") | list }}'
    worker_domains: '{{ all_libvirt_domains_for_cluster | select("contains", "worker") | list }}'
    infra_domains: '{{ (all_libvirt_domains_for_cluster | select("contains", "infra") | list) | default([]) }}'
  tags:
    - libvirt

- name: shutdown cluster nodes via libvirt
  community.libvirt.virt:
    command: shutdown
    name: '{{ cluster_node }}'
  loop: '{{ worker_domains + master_domains + infra_domains }}'
  loop_control:
    loop_var: cluster_node
  tags:
    - libvirt

- name: check if the cluster nodes have been shut down successfully
  community.libvirt.virt:
    command: list_vms
    state: shutdown
  register: offline_libvirt_domains
  until: offline_libvirt_domains.list_vms is superset(worker_domains + master_domains + infra_domains)
  retries: 30
  delay: 10
  tags:
    - libvirt

- name: tune cluster nodes (libvirt domain modifications)
  block:
    - name: optimize node network device
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/libvirt_optimize_network.yml'
      loop: '{{ worker_domains + master_domains + infra_domains }}'
      loop_control:
        loop_var: cluster_node

    - name: disable memballoon device
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/libvirt_disable_memballoon.yml'
      loop: '{{ worker_domains + master_domains + infra_domains }}'
      loop_control:
        loop_var: cluster_node

    - name: add iothreads
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/libvirt_add_iothreads.yml'
      loop: '{{ worker_domains + master_domains + infra_domains }}'
      loop_control:
        loop_var: cluster_node

    - name: optimize disk usage mode
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/libvirt_optimize_disks.yml'
      loop: '{{ worker_domains + master_domains + infra_domains }}'
      loop_control:
        loop_var: cluster_node

    - name: bump CPU shares for worker nodes
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/libvirt_set_cpu_shares.yml'
      loop: '{{ worker_domains | product([ domain_cpu_shares.worker ]) | list }}'
      loop_control:
        loop_var: cluster_node_share
  always:
    - name: start cluster nodes via libvirt
      community.libvirt.virt:
        name: '{{ cluster_node }}'
        state: running
      loop: '{{ master_domains + worker_domains + infra_domains }}'
      loop_control:
        loop_var: cluster_node

    - name: wait until the cluster nodes have been started successfully
      community.libvirt.virt:
        command: list_vms
        state: running
      register: online_libvirt_domains
      until: online_libvirt_domains.list_vms is superset(master_domains + worker_domains + infra_domains)
      retries: 30
      delay: 10
  tags:
    - libvirt

- name: tune cluster nodes (OpenShift cluster modifications)
  block:
    - name: enable 'receive flow steering' network configuration on cluster worker nodes
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/k8s_enable_rfs.yml'

    - name: disable transparent huge pages on cluster worker nodes
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/k8s_disable_thps.yml'
  tags:
    - ocp
