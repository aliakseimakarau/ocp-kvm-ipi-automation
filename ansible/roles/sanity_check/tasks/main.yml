---

- name: ensure the targeted KVM host is running RHEL 8.x on s390x / ppc64le / x86_64
  ansible.builtin.assert:
    that:
      - "ansible_os_family == 'RedHat'"
      - "ansible_distribution_major_version == '8'"
      - '{{ ansible_architecture is inlist(["s390x", "ppc64le", "x86_64"]) }}'

- name: check if mandatory configuration variables are set
  ansible.builtin.assert:
    that: '{{ item }}'
  loop:
    - cluster_base_domain is defined and cluster_base_domain | trim | length > 0
    - cluster_name is defined and cluster_base_domain | trim | length > 0
    - cluster_number_of_workers is defined and cluster_number_of_workers | int > 0
    - openshift_master_root_volume_size is defined and openshift_master_root_volume_size | int > 0
    - openshift_master_number_of_cpus is defined and openshift_master_number_of_cpus | int > 0
    - openshift_master_memory_size is defined and openshift_master_memory_size | int > 0
    - openshift_worker_root_volume_size is defined and openshift_worker_root_volume_size | int > 0
    - openshift_worker_number_of_cpus is defined and openshift_worker_number_of_cpus | int > 0
    - openshift_worker_memory_size is defined and openshift_worker_memory_size | int > 0
    - openshift_release_url is defined and openshift_release_url | trim | length > 0
    - openshift_rhcos_image_url is defined and openshift_rhcos_image_url | trim | length > 0

- name: ensure KVM host is capable of fulfilling requested cluster configuration hardware demands
  block:
    - name: fetch disk space information of libvirt location on the KVM host
      ansible.builtin.shell:
        cmd: 'test -d /var/lib/libvirt/openshift-images && df -B1 --output=avail /var/lib/libvirt/openshift-images || df -B1 --output=avail /var/lib'
      register: libvirt_df_result

    - name: set libvirt_free_space fact
      ansible.builtin.set_fact:
        libvirt_free_space: '{{ libvirt_df_result.stdout_lines | last }}'

    - name: calculate cluster configuration hardware demands
      ansible.builtin.set_fact:
        total_memory_required: '{{ openshift_master_memory_size * 3 + openshift_worker_memory_size * cluster_number_of_workers + openshift_infra_memory_size * openshift_number_of_infra_nodes }}'
        min_required_disk_space: '{{ (openshift_master_root_volume_size * 3 + openshift_worker_root_volume_size * cluster_number_of_workers + openshift_infra_root_volume_size * openshift_number_of_infra_nodes) / 5 }}'
      when: openshift_setup_dedicated_infra_nodes

    - name: calculate cluster configuration hardware demands
      ansible.builtin.set_fact:
        total_memory_required: '{{ openshift_master_memory_size * 3 + openshift_worker_memory_size * cluster_number_of_workers }}'
        min_required_disk_space: '{{ (openshift_master_root_volume_size * 3 + openshift_worker_root_volume_size * cluster_number_of_workers) / 5 }}'
      when: not openshift_setup_dedicated_infra_nodes

    - name: ensure that the hardware demands can be met by the KVM host
      ansible.builtin.assert:
        that:
          - 'ansible_memtotal_mb > total_memory_required | int'
          - 'ansible_processor_cores > openshift_worker_number_of_cpus'
          - 'libvirt_free_space | int >= min_required_disk_space | int'
        fail_msg: |-
          "The KVM host does not meet the hardware demands required by your OpenShift cluster configuration."
          "Make sure the host has at least:"
          "{{ total_memory_required }} MB of RAM available"
          "{{ ansible_processor_cores }} CPU cores available"
          "{{ min_required_disk_space | int | human_readable(unit='G') }} free disk space available at /var/lib/libvirt"
      when: 0 > 1

- name: ensure KVM host isn't using incompatible OS-level packages
  block:
    - name: fetch RPM package facts
      ansible.builtin.package_facts:
        manager: auto

    # see: https://bugzilla.redhat.com/show_bug.cgi?id=2038812
    - name: ensure that the KVM host has a compatible version of libvirt installed
      ansible.builtin.assert:
        that:
          - ansible_facts.packages['libvirt'][0]['release'] is not startswith('37.1.module')
        fail_msg: |-
          "The KVM host has a version of libvirt installed that is known to be incompatible with OpenShift:"
          "{{ ansible_facts.packages['libvirt'][0]['name'] }}-{{ ansible_facts.packages['libvirt'][0]['version'] }}-{{ ansible_facts.packages['libvirt'][0]['release'] }}"
          "Follow these instructions in the troubleshooting guide to resolve the issue:"
          "https://github.com/ibm-s390-cloud/ocp-kvm-ipi-automation/blob/main/docs/TROUBLESHOOTING.md#using-an-incompatible-libvirt-version"
      when:
        - "'libvirt' in ansible_facts.packages"
