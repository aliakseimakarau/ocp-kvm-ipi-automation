---

- name: configure NetworkManager
  block:
    - name: remove immutability attribute from /etc/resolv.conf file
      ansible.builtin.command:
        cmd: 'chattr -i /etc/resolv.conf'

    - name: create backup of /etc/resolv.conf file
      ansible.builtin.copy:
        src: /etc/resolv.conf
        dest: /etc/resolv.conf.bkup
        owner: root
        group: root
        mode: '0644'
        attributes: '+i'
        remote_src: true
        force: false

    - name: enable dnsmasq module
      ansible.builtin.copy:
        src: '{{ role_path }}/files/networkmanager.dns.conf'
        dest: /etc/NetworkManager/conf.d/openshift.conf
        owner: root
        group: root
        mode: '0644'
        force: true

    - name: configure dnsmasq module for OpenShift
      ansible.builtin.template:
        src: '{{ role_path }}/templates/dnsmasq.openshift.conf.j2'
        dest: /etc/NetworkManager/dnsmasq.d/openshift.conf
        owner: root
        group: root
        mode: '0644'
        force: true

    - name: configure various aspects of dnsmasq
      ansible.builtin.copy:
        src: '{{ role_path }}/files/{{ item.src }}'
        dest: '/etc/NetworkManager/dnsmasq.d/{{ item.tgt }}'
        owner: root
        group: root
        mode: '0644'
        force: true
      loop:
        - { 'src': 'dnsmasq.cache.conf', 'tgt': 'cache.conf' }
        - { 'src': 'dnsmasq.add-hosts.conf', 'tgt': 'add-hosts.conf' }

    - name: reload NetworkManager configuration
      ansible.builtin.service:
        name: NetworkManager
        state: reloaded
        enabled: true

    - name: slurp original of /etc/resolv.conf file from backup
      ansible.builtin.slurp:
        src: /etc/resolv.conf.bkup
      register: original_etc_resolv_conf

    - name: retain any nameserver settings from the original /etc/resolv.conf file
      ansible.builtin.lineinfile:
        path: /etc/resolv.conf
        line: '{{ item }}'
        insertafter: '^nameserver.*$'
      loop: "{{ original_etc_resolv_conf['content'] | b64decode | trim | regex_findall('^nameserver.*$', multiline=true) }}"
  always:
    - name: add immutability attribute to /etc/resolv.conf file
      ansible.builtin.command:
        cmd: 'chattr +i /etc/resolv.conf'

- name: configure haproxy
  block:
    - name: enable non-local IPv4 port bindings
      ansible.posix.sysctl:
        name: net.ipv4.ip_nonlocal_bind
        value: '1'
        sysctl_set: true
        state: present
        reload: true

    - name: ensure haproxy package is present
      ansible.builtin.dnf:
        name: haproxy
        state: present

    - name: start haproxy service
      ansible.builtin.service:
        name: haproxy
        state: started
        enabled: true

    - name: configure haproxy
      ansible.builtin.blockinfile:
        path: /etc/haproxy/haproxy.cfg
        block: '{{ lookup("template", "{{ role_path }}/templates/haproxy.cfg.j2") }}'

    - name: restart haproxy service
      ansible.builtin.service:
        name: haproxy
        state: restarted
        enabled: true

- name: configure Apache httpd
  block:
    - name: ensure httpd package is present
      ansible.builtin.dnf:
        name: httpd
        state: present

    - name: bind httpd to port 8080
      ansible.builtin.lineinfile:
        dest: /etc/httpd/conf/httpd.conf
        regexp: ^Listen 80
        line: Listen 8080

    - name: reload httpd service
      ansible.builtin.service:
        name: httpd.service
        state: reloaded

- name: update /etc/hosts
  block:
    - name: set /etc/hosts fact
      ansible.builtin.set_fact:
        etc_hosts_template:
          - '{{ ansible_default_ipv4.address }}'
          - 'noobaa-mgmt-openshift-storage.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'alertmanager-main-openshift-monitoring.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'console-openshift-console.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'downloads-openshift-console.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'grafana-openshift-monitoring.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'oauth-openshift.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'prometheus-k8s-openshift-monitoring.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'rgw.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'rgw.router-default.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 's3-openshift-storage.apps.{{ cluster_name }}.{{ cluster_base_domain }}'
          - 'canary-openshift-ingress-canary.apps.{{ cluster_name }}.{{ cluster_base_domain }}'

    - name: add line to /etc/hosts file
      ansible.builtin.blockinfile:
        path: /etc/hosts
        marker: '{{ host_marker }}'
        block: "{{ (etc_hosts_template | join(' ')) }}"
